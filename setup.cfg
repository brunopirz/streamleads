[metadata]
name = streamleads
version = 1.0.0
author = Bruno
author_email = bruno@streamleads.com
description = Sistema avançado de captura e gerenciamento de leads com automação inteligente
long_description = file: README.md
long_description_content_type = text/markdown
url = https://github.com/bruno/streamleads
project_urls =
    Bug Tracker = https://github.com/bruno/streamleads/issues
    Documentation = https://streamleads.readthedocs.io
    Source Code = https://github.com/bruno/streamleads
classifiers =
    Development Status :: 4 - Beta
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Operating System :: OS Independent
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.11
    Programming Language :: Python :: 3.12
    Framework :: FastAPI
    Topic :: Internet :: WWW/HTTP :: HTTP Servers
    Topic :: Software Development :: Libraries :: Application Frameworks

[options]
packages = find:
python_requires = >=3.11
include_package_data = True
zip_safe = False
install_requires =
    fastapi>=0.104.0
    uvicorn[standard]>=0.24.0
    sqlalchemy>=2.0.0
    alembic>=1.12.0
    psycopg2-binary>=2.9.0
    redis>=5.0.0
    celery>=5.3.0
    pydantic>=2.4.0
    pydantic-settings>=2.0.0
    python-jose[cryptography]>=3.3.0
    passlib[bcrypt]>=1.7.0
    python-multipart>=0.0.6
    email-validator>=2.0.0
    phonenumbers>=8.13.0
    streamlit>=1.28.0
    plotly>=5.17.0
    pandas>=2.1.0
    requests>=2.31.0
    aiohttp>=3.8.0
    python-decouple>=3.8
    loguru>=0.7.0
    prometheus-client>=0.17.0

[options.packages.find]
where = .
include = app*, dashboard*, scripts*
exclude = tests*, docs*, alembic*

[options.extras_require]
dev =
    pytest>=7.4.0
    pytest-asyncio>=0.21.0
    pytest-cov>=4.1.0
    pytest-mock>=3.11.0
    pytest-xdist>=3.3.0
    httpx>=0.25.0
    factory-boy>=3.3.0
    faker>=19.0.0
    black>=23.9.0
    isort>=5.12.0
    flake8>=6.1.0
    mypy>=1.6.0
    bandit>=1.7.0
    safety>=2.3.0
    pre-commit>=3.4.0
    pylint>=2.17.0
    pydocstyle>=6.3.0
    autoflake>=2.2.0
    pyupgrade>=3.10.0
    locust>=2.17.0
docs =
    mkdocs>=1.5.0
    mkdocs-material>=9.4.0
    mkdocstrings[python]>=0.23.0
    mkdocs-gen-files>=0.5.0
    mkdocs-literate-nav>=0.6.0
    mkdocs-section-index>=0.3.0
monitoring =
    prometheus-client>=0.17.0
    grafana-api>=1.0.0
integrations =
    slack-sdk>=3.22.0
    twilio>=8.9.0
    sendgrid>=6.10.0

[options.entry_points]
console_scripts =
    streamleads = app.cli:main

[options.package_data]
* = *.txt, *.md, *.yml, *.yaml, *.json, *.toml
app = py.typed

# Flake8 configuration
[flake8]
max-line-length = 88
max-complexity = 10
select = E,W,F,C
ignore =
    # Line too long (handled by black)
    E501,
    # Line break before binary operator (conflicts with black)
    W503,
    # Line break after binary operator (conflicts with black)
    W504,
    # Whitespace before ':' (conflicts with black)
    E203,
    # Multiple imports on one line
    E401,
    # Module level import not at top of file
    E402,
exclude =
    .git,
    __pycache__,
    .venv,
    venv,
    .eggs,
    *.egg,
    build,
    dist,
    .tox,
    .mypy_cache,
    .pytest_cache,
    htmlcov,
    alembic/versions,
    migrations,
per-file-ignores =
    __init__.py:F401
    tests/*:E501,F401,F811,F841
    alembic/versions/*:E501,F401,F841
    scripts/*:E501
count = True
statistics = True
show-source = True
bench = True

# Docstring conventions
docstring-convention = google

# Import order
import-order-style = google
application-import-names = app,tests,scripts,dashboard

# McCabe complexity
max-complexity = 10

# Naming conventions
classmethod-decorators = classmethod
staticmethod-decorators = staticmethod

# Bandit configuration
[bandit]
exclude_dirs = tests,alembic/versions
skips = B101,B601

# Coverage configuration
[coverage:run]
source = app
omit =
    */tests/*
    */test_*
    */__pycache__/*
    */venv/*
    */virtualenv/*
    */site-packages/*
    */alembic/versions/*
    */migrations/*
    app/core/config.py
    app/main.py
branch = True
parallel = True
concurrency = thread,multiprocessing

[coverage:report]
precision = 2
show_missing = True
skip_covered = False
skip_empty = True
sort = Cover
exclude_lines =
    pragma: no cover
    def __repr__
    if self.debug:
    if settings.DEBUG
    raise AssertionError
    raise NotImplementedError
    if 0:
    if __name__ == .__main__.:
    class .*\bProtocol\):
    @(abc\.)?abstractmethod
    @overload
    TYPE_CHECKING
fail_under = 80

[coverage:html]
directory = htmlcov

[coverage:xml]
output = coverage.xml

# Isort configuration
[isort]
profile = black
line_length = 88
multi_line_output = 3
include_trailing_comma = True
force_grid_wrap = 0
use_parentheses = True
ensure_newline_before_comments = True
src_paths = app,tests,scripts,dashboard
skip_glob = alembic/versions/*.py
known_first_party = app,tests,scripts,dashboard
known_third_party =
    fastapi,
    pydantic,
    sqlalchemy,
    alembic,
    celery,
    redis,
    streamlit,
    plotly,
    pandas,
    pytest,
    httpx,
    requests
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER

# MyPy configuration (fallback for tools that don't read pyproject.toml)
[mypy]
python_version = 3.11
warn_return_any = True
warn_unused_configs = True
disallow_untyped_defs = True
disallow_incomplete_defs = True
check_untyped_defs = True
disallow_untyped_decorators = True
no_implicit_optional = True
warn_redundant_casts = True
warn_unused_ignores = True
warn_no_return = True
warn_unreachable = True
strict_equality = True
show_error_codes = True
show_column_numbers = True
color_output = True
error_summary = True
pretty = True
namespace_packages = True
explicit_package_bases = True
files = app,tests,scripts
exclude = alembic/versions/,build/,dist/,.venv/,venv/

[mypy-fastapi.*]
ignore_missing_imports = True

[mypy-pydantic.*]
ignore_missing_imports = True

[mypy-sqlalchemy.*]
ignore_missing_imports = True

[mypy-alembic.*]
ignore_missing_imports = True

[mypy-celery.*]
ignore_missing_imports = True

[mypy-redis.*]
ignore_missing_imports = True

[mypy-streamlit.*]
ignore_missing_imports = True

[mypy-plotly.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-pytest.*]
ignore_missing_imports = True

[mypy-httpx.*]
ignore_missing_imports = True

[mypy-requests.*]
ignore_missing_imports = True

# Pydocstyle configuration
[pydocstyle]
inherit = false
ignore = D100,D101,D102,D103,D104,D105,D106,D107
match = (?!test_).*\.py
match-dir = (?!tests)[^\.].*
convention = google

# Tool configuration for setuptools
[egg_info]
tag_build = 
tag_date = 0