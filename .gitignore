# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
.pybuilder/
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# Cython debug symbols
cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be added to the global gitignore or merged into this project gitignore.  For a PyCharm
#  project, it is recommended to ignore the entire .idea directory.
.idea/

# VS Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets

# Local History for Visual Studio Code
.history/

# Built Visual Studio Code Extensions
*.vsix

# Docker
.dockerignore

# Database
*.db
*.sqlite
*.sqlite3

# Logs
logs/
*.log

# Temporary files
*.tmp
*.temp
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# StreamLeads specific
# Backups
backup_*.sql
backups/

# Uploads
uploads/
static/uploads/

# Media files
media/

# Local configuration
local_settings.py
config/local.py

# Development databases
dev.db
test.db

# Streamlit
.streamlit/

# Jupyter
*.ipynb

# Profiling
*.prof
*.pstats

# Performance testing
locust_reports/

# Documentation builds
docs/build/
docs/_build/

# Alembic
# Keep alembic.ini and versions/ but ignore any local overrides
alembic_local.ini

# Redis dumps
dump.rdb

# Celery
celerybeat-schedule.*

# Local development overrides
docker-compose.override.yml
docker-compose.local.yml

# SSL certificates
*.pem
*.key
*.crt
*.csr

# Monitoring
prometheus_data/
grafana_data/

# Node modules (if using any JS tools)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Package files
*.tgz
*.tar.gz

# Editor files
*.sublime-project
*.sublime-workspace

# Local environment files
.env.local
.env.development
.env.test
.env.production

# Cache directories
.cache/
.parcel-cache/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# TernJS port file
.tern-port

# Stores VSCode versions used for testing VSCode extensions
.vscode-test

# Local Netlify folder
.netlify

# Terraform
*.tfstate
*.tfstate.*
.terraform/

# Ansible
*.retry

# Vagrant
.vagrant/

# Local data
data/
local_data/

# Temporary uploads
temp_uploads/

# Generated files
generated/

# Build artifacts
artifacts/

# Test outputs
test_outputs/
test_results/

# Screenshots
screenshots/

# Videos
videos/

# Reports
reports/

# Metrics
metrics/

# Monitoring data
monitoring/

# Local scripts
local_scripts/

# Personal notes
NOTES.md
TODO.md
personal_notes/

# IDE specific
.fleet/
.vscode/
.idea/
*.swp
*.swo

# macOS
.DS_Store
.AppleDouble
.LSOverride

# Windows
Thumbs.db
ehthumbs.db
Desktop.ini
$RECYCLE.BIN/

# Linux
*~

# Backup files
*.bak
*.backup
*.old
*.orig

# Compressed files
*.zip
*.rar
*.7z
*.tar
*.gz
*.bz2
*.xz

# Temporary directories
tmp/
temp/

# Lock files
*.lock
package-lock.json
yarn.lock
Pipfile.lock
poetry.lock

# Local configuration overrides
config.local.json
settings.local.json

# Development tools
.pre-commit-config.local.yaml

# Local Docker files
docker-compose.dev.local.yml
docker-compose.prod.local.yml

# Kubernetes
*.kubeconfig
kustomization.yaml

# Helm
charts/

# Secrets
secrets/
*.secret

# API keys
api_keys.txt
keys/

# Local overrides
overrides/
local/